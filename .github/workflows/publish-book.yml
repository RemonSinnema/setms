# Sample workflow for building and deploying a mdBook site to GitHub Pages
#
# To get started with mdBook see: https://rust-lang.github.io/mdBook/index.html
#
name: Deploy mdBook site to Pages

on:
  # Runs on pushes targeting the default branch
  push:
    branches:
      - main

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  vale:
    runs-on: ubuntu-latest
    container:
      image: jdkato/vale:v2.10.2
    steps:
      - uses: actions/checkout@v3
      - run: vale docs
  megalinter:
    runs-on: ubuntu-latest
    container:
      image: oxsecurity/megalinter-documentation
    steps:
      - uses: actions/checkout@v3
        with:
          # This action in a docker container means we have a folder structure
          # like `docs/docs/docs/index.md` which is confusing the FILTER_REGEX_INCLUDE.
          # We clone the repo to this path to differentiate the repo from the `docs`
          # folder and configure mega linter to use `documentation` as the workspace.
          path: documentation
      - name: Mega-linter
        run: /entrypoint.sh
        env:
          VALIDATE_ALL_CODEBASE: true
          FILTER_REGEX_INCLUDE: (documentation/docs/)
          DEFAULT_WORKSPACE: documentation
  build:
    runs-on: ubuntu-latest
    needs:
      - vale
      - megalinter
    steps:
      - uses: actions/checkout@v3
      - name: Install mdBook
        run: |
          curl --proto '=https' --tlsv1.2 https://sh.rustup.rs -sSf -y | sh
          rustup update
          cargo install mdbook mdbook-bib mdbook-admonish mdbook-katex
      - name: Setup Pages
        id: pages
        uses: actions/configure-pages@v3
      - name: Build with mdBook
        run: mdbook build
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v2
        with:
          path: ./book
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v2
